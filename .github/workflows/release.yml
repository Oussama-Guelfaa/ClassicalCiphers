name: Release

permissions:
  contents: write  # Allows the workflow to create releases and upload assets

on:
  push:
    tags:
      - 'v*'     # Trigger on any tag that starts with 'v'

jobs:
  build_test_and_release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full commit history is available

      # Step 2: Set up Python 3.10
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run tests
      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}  # Set PYTHONPATH to the project root
        run: pytest

      # Step 5: Generate the changelog
      - name: Generate changelog
        id: changelog
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          if [ -z "$PREV_TAG" ]; then
            echo "No previous tag found, generating changelog from first commit."
            git log --pretty=format:"* %s (%h)" > CHANGELOG.md
          else
            echo "Generating changelog from $PREV_TAG to HEAD"
            git log "${PREV_TAG}"..HEAD --pretty=format:"* %s (%h)" > CHANGELOG.md
          fi

          echo "Changelog generated:"
          cat CHANGELOG.md

          # Set changelog as an output for use in the next step
          echo "::set-output name=log::$(cat CHANGELOG.md | sed 's/%/%25/g; s/\n/%0A/g; s/\r/%0D/g')"

      # Step 6: Build the distribution files
      - name: Build distribution
        run: |
          rm -rf dist  # Clean up dist folder before build
          python setup.py sdist bdist_wheel
          ls dist  # List the contents of the dist folder for debugging

      # Step 7: Upload build artifacts to release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }}"
          body: ${{ steps.changelog.outputs.log }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 8: Upload release assets
      - name: Upload Release Assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*  # Match all files in the dist folder
          tag: ${{ github.ref_name }}
